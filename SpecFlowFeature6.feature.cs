// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ClassLibrary1.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("6. verify profilesetting errors")]
    public partial class _6_VerifyProfilesettingErrorsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature6.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "6. verify profilesetting errors", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("add info and save - happy path")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AddInfoAndSave_HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("add info and save - happy path", new string[] {
                        "mytag"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I login with user and goto setting page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrueName",
                        "ID",
                        "PhoneNumber",
                        "ProfileTitle",
                        "ProfileSite",
                        "Weibo",
                        "ProfileQQ"});
            table1.AddRow(new string[] {
                        "441111",
                        "110105199901017437",
                        "13782736447",
                        "leadengineer",
                        "http://demo2D",
                        "http://SD",
                        "98805"});
#line 6
 testRunner.And("I update my info", ((string)(null)), table1, "And ");
#line 9
 testRunner.When("I press 保存", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("I can see “基础信息保存成功。”  display on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("modify personal info-validation")]
        public virtual void ModifyPersonalInfo_Validation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("modify personal info-validation", ((string[])(null)));
#line 13
 this.ScenarioSetup(scenarioInfo);
#line 14
  testRunner.Given("I login with user and goto setting page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrueName",
                        "ID",
                        "PhoneNumber",
                        "ProfileTitle",
                        "ProfileSite",
                        "Weibo",
                        "ProfileQQ"});
            table2.AddRow(new string[] {
                        "441111111VividksdkDD",
                        "22%%%",
                        "FD$^^^%5fs3",
                        "Df1SJDsjdsfdfsdgsdgsdDSDFGFH3",
                        "fdsff",
                        "idisj",
                        "fdhsjd"});
#line 15
 testRunner.And("I input my info", ((string)(null)), table2, "And ");
#line 18
 testRunner.When("I press 保存", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ErrorMessage"});
            table3.AddRow(new string[] {
                        "最多只能输入 18 个字符"});
            table3.AddRow(new string[] {
                        "请正确输入您的身份证号码"});
            table3.AddRow(new string[] {
                        "请输入正确的手机号"});
            table3.AddRow(new string[] {
                        "最多只能输入 24 个字符"});
            table3.AddRow(new string[] {
                        "地址不正确，须以http://或者https://开头。"});
            table3.AddRow(new string[] {
                        "地址不正确，须以http://或者https://开头。"});
            table3.AddRow(new string[] {
                        "请输入正确的QQ号"});
#line 19
 testRunner.Then("I can see errors", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
